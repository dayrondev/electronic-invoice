// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

enum UserStatus {
  REGISTERED
  ACTIVE
  BLOCKED
  DELETED
}

model User {
  id                 String     @id @default(uuid())
  email              String     @unique
  name               String
  password           String
  hashedRefreshToken String?
  role               Role       @default(USER)
  status             UserStatus @default(REGISTERED)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  businesses         Business[]
}

enum PersonType {
  F // Física
  J // Jurídica
}

enum ResidenceType {
  E // Extranjero (Fuera Unión Europea)
  R // Residente (en España)
  U // Residente en la Unión Europea (excepto España)
}

enum BusinessStatus {
  ACTIVE
  INACTIVE
  BLOCKED
  DELETED
}

model Business {
  id                String         @id @default(uuid())
  name              String
  taxIdentification String         @unique
  personType        PersonType     @default(J)
  residenceType     ResidenceType
  status            BusinessStatus @default(ACTIVE)
  addressId         String
  address           Address        @relation(fields: [addressId], references: [id])
  userId            String
  user              User           @relation(fields: [userId], references: [id])
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
}

model Country {
  id        String    @id @default(uuid())
  name      String
  iso2      String    @unique
  iso3      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  addresses Address[]
}

model Address {
  id         String     @id @default(uuid())
  street     String
  postalCode String
  town       String
  province   String
  countryId  String
  country    Country    @relation(fields: [countryId], references: [id])
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  Business   Business[]
}
